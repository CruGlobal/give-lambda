service: give-lambda

custom:
  environmentMap:
    production: prod
    staging: stage

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${env:ENVIRONMENT}
  region: us-east-1
  vpc:
    securityGroupIds:
      - ${file(${env:ECS_CONFIG}/bin/vars.yml):us-east-1.webapp_elb_sg}
    subnetIds: ${file(${env:ECS_CONFIG}/bin/vars.yml):us-east-1.prod_apps_1_all}
  stackTags:
    Name: ${env:PROJECT_NAME}-${self:custom.environmentMap.${env:ENVIRONMENT}}
    owner: apps@cru.org
    application: ${env:PROJECT_NAME}
    env: ${self:custom.environmentMap.${env:ENVIRONMENT}}
    managed_by: serverless-framework
    function: lambda
  environment: ${file(serverless/environment.js)}

functions:
  cloudfront:
    handler: cloudfront/cloudfront.handler
    memorySize: 128
    timeout: 5
    description: Adds Vary for CORS response headers

package:
  patterns:
    - '!test/**'
    - '!**/*.test.js'
    - '!.deployment/**'

resources:
  Resources:
    IamRoleLambdaExecution:
      Properties:
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
          - arn:aws:iam::aws:policy/service-role/AWSLambdaENIManagementAccess
